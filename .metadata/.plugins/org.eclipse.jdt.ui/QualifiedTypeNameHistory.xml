<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="oop.ex6.filescript.sections.filters.Filter"/>
<fullyQualifiedTypeName name="sun.swing.SwingUtilities2.Section"/>
<fullyQualifiedTypeName name="sun.security.pkcs.ParsingException"/>
<fullyQualifiedTypeName name="oop.ex6.filescript.sections.Section"/>
<fullyQualifiedTypeName name="oop.ex6.filescript.sections.orders.Order"/>
<fullyQualifiedTypeName name="oop.ex6.filescript.MyFileScript.sections.filters.Filter"/>
<fullyQualifiedTypeName name="oop.ex6.filescript.MyFileScript.sections.orders.Order"/>
<fullyQualifiedTypeName name="oop.ex6.filescript.MyFileScript.sections.filters.FileAll"/>
<fullyQualifiedTypeName name="java.lang.Double"/>
<fullyQualifiedTypeName name="oop.ex6.filescript.MyFileScript.Prasing"/>
<fullyQualifiedTypeName name="com.sun.org.apache.xalan.internal.xsltc.dom.AbsoluteIterator"/>
<fullyQualifiedTypeName name="oop.ex6.filescript.MyFileScript.sections.orders.AbsoluteOrder"/>
<fullyQualifiedTypeName name="oop.ex6.filescript.MyFileScript.sections.Section"/>
<fullyQualifiedTypeName name="oop.ex6.filescript.MyFileScript.sections.orders.TypeOrder"/>
<fullyQualifiedTypeName name="oop.ex6.filescript.MyFileScript.sections.orders.ReverseOrder"/>
<fullyQualifiedTypeName name="java.lang.System"/>
<fullyQualifiedTypeName name="oop.ex6.filescript.sections.orders.AbsoluteOrder"/>
<fullyQualifiedTypeName name="oop.ex6.filescript.Warning"/>
<fullyQualifiedTypeName name="oop.ex6.filescript.sections.filters.YesOrNoChecking"/>
<fullyQualifiedTypeName name="oop.ex6.filescript.sections.filters.Warning"/>
<fullyQualifiedTypeName name="oop.ex6.filescript.sections.Warning"/>
<fullyQualifiedTypeName name="oop.ex6.filescript.sections.filters.WarningBetweenVariables"/>
<fullyQualifiedTypeName name="oop.ex6.filescript.sections.filters.WarningYesOrNo"/>
<fullyQualifiedTypeName name="oop.ex6.filescript.sections.orders.WarningInOrderName"/>
<fullyQualifiedTypeName name="oop.ex6.filescript.WarningException"/>
<fullyQualifiedTypeName name="java.io.File"/>
<fullyQualifiedTypeName name="java.util.Scanner"/>
<fullyQualifiedTypeName name="com.sun.org.apache.xerces.internal.impl.xs.identity.Selector.Matcher"/>
<fullyQualifiedTypeName name="com.sun.java_cup.internal.runtime.virtual_parse_stack"/>
<fullyQualifiedTypeName name="com.sun.org.apache.xalan.internal.xsltc.compiler.Pattern"/>
<fullyQualifiedTypeName name="com.sun.org.apache.bcel.internal.generic.INSTANCEOF"/>
<fullyQualifiedTypeName name="Sjavac.Parsing"/>
<fullyQualifiedTypeName name="java.util.concurrent.locks.Condition"/>
<fullyQualifiedTypeName name="Sjavac.Condition.Condition"/>
<fullyQualifiedTypeName name="com.sun.tracing.dtrace.ArgsAttributes"/>
<fullyQualifiedTypeName name="java.util.regex.PatternSyntaxException"/>
<fullyQualifiedTypeName name="java.lang.IllegalStateException"/>
<fullyQualifiedTypeName name="java.lang.Integer"/>
<fullyQualifiedTypeName name="Sjavac.Variable.VariableFactory"/>
<fullyQualifiedTypeName name="Sjavac.Function.Function"/>
<fullyQualifiedTypeName name="Sjavac.SyntaxErrorException"/>
<fullyQualifiedTypeName name="Sjavac.Function.FunctionErrorException"/>
<fullyQualifiedTypeName name="Sjavac.Function.ReturnVoid"/>
<fullyQualifiedTypeName name="Sjavac.Parser"/>
<fullyQualifiedTypeName name="Sjavac.Variable.VariableErrorException"/>
<fullyQualifiedTypeName name="Sjavac.Function.ReturnValueException"/>
<fullyQualifiedTypeName name="Sjavac.Variable.IntegerVariable"/>
<fullyQualifiedTypeName name="Sjavac.Variable.DoubleVariable"/>
<fullyQualifiedTypeName name="java.lang.Boolean"/>
<fullyQualifiedTypeName name="sun.misc.RegexpPool"/>
<fullyQualifiedTypeName name="Sjavac.Variable.ToArray"/>
<fullyQualifiedTypeName name="Sjavac.Variable.Variable"/>
<fullyQualifiedTypeName name="Sjavac.Variable.BooleanVariable"/>
<fullyQualifiedTypeName name="java.lang.Math"/>
<fullyQualifiedTypeName name="java.util.regex.Matcher"/>
<fullyQualifiedTypeName name="Sjavac.Variable.CommonCheck"/>
<fullyQualifiedTypeName name="java.lang.String"/>
<fullyQualifiedTypeName name="Sjavac.RegExPatterns"/>
<fullyQualifiedTypeName name="java.util.regex.Pattern"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
</qualifiedTypeNameHistroy>
